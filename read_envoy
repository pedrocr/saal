#!/usr/bin/env ruby

require File.dirname(__FILE__)+'/lib/saal.rb'

if ARGV.size != 1
  $stderr.puts "USAGE: read_envoy <host>"
  exit(1)
end

production = SAAL::EnvoyProduction::new("server" => ARGV[0])

puts "VOLTAGES (net-consumption, total-consumption, production)"
puts "Total: \
#{'%10.0f' % production.read_val("consumption_net_rms_voltage")} \
#{'%10.0f' % production.read_val("consumption_total_rms_voltage")} \
#{'%10.0f' % production.read_val("production_total_rms_voltage")} \
"
puts "Line1: \
#{'%10.0f' % production.read_val("consumption_net_phase1_rms_voltage")} \
#{'%10.0f' % production.read_val("consumption_total_phase1_rms_voltage")} \
#{'%10.0f' % production.read_val("production_phase1_rms_voltage")} \
"
puts "Line2: \
#{'%10.0f' % production.read_val("consumption_net_phase2_rms_voltage")} \
#{'%10.0f' % production.read_val("consumption_total_phase2_rms_voltage")} \
#{'%10.0f' % production.read_val("production_phase2_rms_voltage")} \
"
puts "Line3: \
#{'%10.0f' % production.read_val("consumption_net_phase3_rms_voltage")} \
#{'%10.0f' % production.read_val("consumption_total_phase3_rms_voltage")} \
#{'%10.0f' % production.read_val("production_phase3_rms_voltage")} \
"

puts ""
puts "POWERS (net-consumption, total-consumption, production, diff)"
puts "Total: \
#{'%10.0f' % production.read_val("consumption_net_watts_now")} \
#{'%10.0f' % production.read_val("consumption_total_watts_now")} \
#{'%10.0f' % production.read_val("production_total_watts_now")} \
#{'%10.0f' %(production.read_val("consumption_total_watts_now")-production.read_val("production_total_watts_now"))} \
"
puts "Line1: \
#{'%10.0f' % production.read_val("consumption_net_phase1_watts_now")} \
#{'%10.0f' % production.read_val("consumption_total_phase1_watts_now")} \
#{'%10.0f' % production.read_val("production_phase1_watts_now")} \
#{'%10.0f' %(production.read_val("consumption_total_phase1_watts_now")-production.read_val("production_phase1_watts_now"))} \
"
puts "Line2: \
#{'%10.0f' % production.read_val("consumption_net_phase2_watts_now")} \
#{'%10.0f' % production.read_val("consumption_total_phase2_watts_now")} \
#{'%10.0f' % production.read_val("production_phase2_watts_now")} \
#{'%10.0f' %(production.read_val("consumption_total_phase2_watts_now")-production.read_val("production_phase2_watts_now"))} \
"
puts "Line3: \
#{'%10.0f' % production.read_val("consumption_net_phase3_watts_now")} \
#{'%10.0f' % production.read_val("consumption_total_phase3_watts_now")} \
#{'%10.0f' % production.read_val("production_phase3_watts_now")} \
#{'%10.0f' %(production.read_val("consumption_total_phase3_watts_now")-production.read_val("production_phase3_watts_now"))} \
"

puts ""
puts "ENERGIES (net-consumption, total-consumption, production, diff, inverters)"
puts "Total: \
#{'%10.0f' % production.read_val("consumption_net_watt_hours_lifetime")} \
#{'%10.0f' % production.read_val("consumption_total_watt_hours_lifetime")} \
#{'%10.0f' % production.read_val("production_total_watt_hours_lifetime")} \
#{'%10.0f' %(production.read_val("consumption_total_watt_hours_lifetime")-production.read_val("production_total_watt_hours_lifetime"))} \
#{'%10.0f' % production.read_val("production_inverters_watt_hours_lifetime")} \
"
puts "Line1: \
#{'%10.0f' % production.read_val("consumption_net_phase1_watt_hours_lifetime")} \
#{'%10.0f' % production.read_val("consumption_total_phase1_watt_hours_lifetime")} \
#{'%10.0f' % production.read_val("production_phase1_watt_hours_lifetime")} \
#{'%10.0f' %(production.read_val("consumption_total_phase1_watt_hours_lifetime")-production.read_val("production_phase1_watt_hours_lifetime"))} \
"
puts "Line2: \
#{'%10.0f' % production.read_val("consumption_net_phase2_watt_hours_lifetime")} \
#{'%10.0f' % production.read_val("consumption_total_phase2_watt_hours_lifetime")} \
#{'%10.0f' % production.read_val("production_phase2_watt_hours_lifetime")} \
#{'%10.0f' %(production.read_val("consumption_total_phase2_watt_hours_lifetime")-production.read_val("production_phase2_watt_hours_lifetime"))} \
"
puts "Line3: \
#{'%10.0f' % production.read_val("consumption_net_phase3_watt_hours_lifetime")} \
#{'%10.0f' % production.read_val("consumption_total_phase3_watt_hours_lifetime")} \
#{'%10.0f' % production.read_val("production_phase3_watt_hours_lifetime")} \
#{'%10.0f' %(production.read_val("consumption_total_phase3_watt_hours_lifetime")-production.read_val("production_phase3_watt_hours_lifetime"))} \
"

puts ""
puts "POWER FACTORS (net-consumption, total-consumption, production)"
puts "Total: \
#{'%10.2f' % production.read_val("consumption_net_power_factor")} \
#{'%10.2f' % production.read_val("consumption_total_power_factor")} \
#{'%10.2f' % production.read_val("production_total_power_factor")} \
"
puts "Line1: \
#{'%10.2f' % production.read_val("consumption_net_phase1_power_factor")} \
#{'%10.2f' % production.read_val("consumption_total_phase1_power_factor")} \
#{'%10.2f' % production.read_val("production_phase1_power_factor")} \
"
puts "Line2: \
#{'%10.2f' % production.read_val("consumption_net_phase2_power_factor")} \
#{'%10.2f' % production.read_val("consumption_total_phase2_power_factor")} \
#{'%10.2f' % production.read_val("production_phase2_power_factor")} \
"
puts "Line3: \
#{'%10.2f' % production.read_val("consumption_net_phase3_power_factor")} \
#{'%10.2f' % production.read_val("consumption_total_phase3_power_factor")} \
#{'%10.2f' % production.read_val("production_phase3_power_factor")} \
"

puts ""
inverters = SAAL::EnvoyInverters::new("server" => ARGV[0])
inverters.enumerate.each do |serial|
  puts "INVERTER: #{serial} \
date:#{inverters.read_val("inverter_#{serial}_last_report_date")} \
lastWatts:#{inverters.read_val("inverter_#{serial}_watts_now")} \
maxWatts:#{inverters.read_val("inverter_#{serial}_watts_max")} \
"
end
