#!/usr/bin/env ruby
NUM_VALUES = 500 # Number of datapoints per series in the chart

require File.dirname(__FILE__)+'/../lib/saal.rb'

def usage
  $stderr.puts("Usage: saal_chart <day|week|4week|year|4year> <chart_file.png>")
end

if ARGV.size != 2
  usage
  exit (2)
end

@now = Time.now.utc
case ARGV[0]
when 'day' then
  PERIODNAMES = (0..23).map{|i| ((@now.hour - i)%24).to_s}.reverse
  @last = 24
  @periods = :hours
  @alignnames = :center
when 'week' then
  daynames = ["Seg","Ter","Qua","Qui","Sex","Sab","Dom"]
  PERIODNAMES = (1..7).map{|i| (@now.wday - i)%7}.map{|w| daynames[w]}.reverse
  @last = 7
  @periods = :days
  @alignnames = :center
when '4week' then
  monthnames = ["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Sep","Out","Nov","Dez"]
  initial = @now.to_i - (@now.wday-1)*24*60*60
  PERIODNAMES = (0...4).map do |i| 
    time = Time.at(initial - i*24*60*60*7)
    time.day.to_s+" "+ monthnames[time.month-1]
  end.reverse
  @last = 28
  @periods = :days
  @alignnames = :left
when 'year' then
  monthnames = ["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Sep","Out","Nov","Dez"]
  initial = @now.to_i - (@now.wday-1)*24*60*60
  PERIODNAMES = (1..12).map{|i| (@now.month - i)%12}.map{|m| monthnames[m]}.reverse
  @last = 12
  @periods = :months
  @alignnames = :center
when '4year' then
  PERIODNAMES = (0..3).map{|i| (@now.year - i).to_s}.reverse
  @last = 4
  @periods = :years
  @alignnames = :center
else
  usage
  exit(3)
end
NUMPERIODS = PERIODNAMES.size

def normalize_data(data, min, max)
  data.map do |i|
    if i.nil?
      -1.0
    elsif i < min
      0.0
    elsif i > max
      100.0
    else
      v = (((i-min)/(max-min).to_f)*1000).round/10.0
    end
  end
end

@sensors = SAAL::Sensors.new
def create_data(sensor, min, max, constant=0)
  @c = SAAL::ChartDataRange.new(@sensors.send(sensor), :last => @last, :periods => @periods)
  d = @c.average(NUM_VALUES)
  d = d.map{|num| num ? num+constant : num}
  normalize_data(d,min,max)
end

@data = [create_data('temp_exterior', -15, 45),
         create_data('temp_estufa', -15, 45),
         create_data('hum_exterior', 0, 100),
         create_data('pressao', 950, 1050, 0.54*33.86)] #Convert to pressure at sea level


@dataurl = @data.map {|values| values.join(",")}.join('|')

r = {}
case @alignnames
when :center
  @periodnamesurl = "||"+PERIODNAMES.join('||')+"||"
when :left
  @periodnamesurl = "|"+PERIODNAMES.join('|')+"||"
  r[:chxs] = "0,555555,11,-1,lt"
end
@xincr = 100.0/NUMPERIODS.to_f*10000.truncate.to_f/10000

r[:chof] = "png"
r[:chs] = "700x300"
r[:cht] = "lc"
r[:chco] = "00ff00,ff0000,0000ff,ffff00"
r[:chxt] = "x,y,y,r"
r[:chxl] = "0:#{@periodnamesurl}1:|-15ºC||0||15||30||45ºC|2:|0%|25|50|75|100%|3:|950||975||1000||1025||1050 hPa"
r[:chg] = "#{@xincr},12.5,1,5"
r[:chd] = "t:#{@dataurl}"

@url = "http://chart.apis.google.com/chart?&"
@postdata = r.map{|k,v| k.to_s+"="+v}.join("&")


system "wget --quiet \"#{@url}\" --post-data=\"#{@postdata}\" -O #{ARGV[1]}"

